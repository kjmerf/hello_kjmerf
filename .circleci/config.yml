# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
# Testing sudo for install persistence
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/repo

    steps:
      - checkout
      
      - run:
          name: See if we have .cache
          command: |
              pwd
              ls /home/circleci -la
              ls ~
          
      - run:
          name: See if flake8 is installed
          command: |
              echo 'If empty then there is no flake8'
              if command -v flake8; then
                  command -v flake8;
              fi
              
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum ".circleci/requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
            
      - run:
          name: See if we have .cache again
          command: |
              pwd
              ls /home/circleci -la
              ls ~ -la

      - run:
          name: install dependencies
          command: |
            sudo pip install -r .circleci/requirements.txt
            
      - run:
          name: See if flake8 is installed now
          command:  |
              echo 'If empty then there is no flake8'
              if command -v flake8; then
                  command -v flake8;
              fi

      - save_cache:
          key: v1-dependencies-{{ checksum ".circleci/requirements.txt" }}
          paths:
            - ~/.cache
          
      - run:
          name: Run linter
          #working_directory: ~/repo/src
          command: |
              # stop the build if there are Python syntax errors or undefined names
              flake8 hello_kjmerf --count --select=E901,E999,F821,F822,F823 --show-source --statistics
              # exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide      
              flake8 hello_kjmerf --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - run:
          name: run tests
          command: |
            pytest tests/

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = kjmerf" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: create packages
          command: |
            python setup.py sdist
            python setup.py bdist_wheel
            
      - run:
         name: say something if master
         command: |
             if [ "${CIRCLE_BRANCH}" == "master" ]; then
               echo "I sure hope this is the master branch!"
               pwd
             fi
          
      - deploy:
          name: upload to pypi
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              sudo pip install twine
              twine upload dist/*
            fi
